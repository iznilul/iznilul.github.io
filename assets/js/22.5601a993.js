(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{434:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"wireshark分析http长连接和短连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wireshark分析http长连接和短连接"}},[t._v("#")]),t._v(" WireShark分析HTTP长连接和短连接")]),t._v(" "),a("p",[t._v("[TOC]")]),t._v(" "),a("h2",{attrs:{id:"_0x01-关于长连接和短连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0x01-关于长连接和短连接"}},[t._v("#")]),t._v(" 0x01 关于长连接和短连接")]),t._v(" "),a("p",[t._v("HTTP基于TCP，是一种应用于应用层的无状态的传输协议。")]),t._v(" "),a("p",[t._v("HTTP的无状态：协议永远都是客户端发起请求，服务器回送响应。每次连接只处理一个请求，当服务器返回本次请求的应答后便立即关闭连接（TCP四次挥手），下次请求客户端再重新建立连接。也就无法实现在客户端没有发起请求的时候，服务器主动将消息推送给客户端。")]),t._v(" "),a("p",[t._v("无状态会导致客户端的每次请求都需要重新建立TCP连接，接受到服务端响应后，断开TCP连接。对于每次建立、断开TCP连接，还是有相当的性能损耗的")]),t._v(" "),a("p",[t._v("为了减少这种损耗引入了"),a("strong",[t._v("keep-alive")]),t._v("机制。http1.0默认是关闭的，通过http请求头设置“connection: keep-alive”进行开启；http1.1中默认开启，通过http请求头设置“connection: close”关闭。")]),t._v(" "),a("p",[a("strong",[t._v("keep-alive")]),t._v("机制：若开启后，在一次http请求中，服务器进行响应后，不再直接断开TCP连接，而是将TCP连接维持一段时间。在这段时间内，如果同一客户端再次向服务端发起http请求，便可以复用此TCP连接，向服务端发起请求，并重置timeout时间计数器，在接下来一段时间内还可以继续复用。这样无疑省略了反复创建和销毁TCP连接的损耗。")]),t._v(" "),a("p",[t._v("keep-alive机制的启用把http分为了长连接和短连接，这次用抓包工具wireshark+tcpdump分析http的长连接和短连接")]),t._v(" "),a("h2",{attrs:{id:"_0x02-准备工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0x02-准备工具"}},[t._v("#")]),t._v(" 0x02 准备工具")]),t._v(" "),a("p",[t._v("需要用到的工具:"),a("strong",[t._v("linux操作系统，python脚本,tupdump,wireshark抓包,nginx监听,postman测试接口（可用浏览器）")])]),t._v(" "),a("p",[t._v("wireshark的安装参考教程：https://www.jianshu.com/p/07f942839d9f")]),t._v(" "),a("p",[t._v("准备一下服务器nginx的配置，测试监听端口8081，keep-alive 连接时间5s")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_processes")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("error_log")]),t._v(" logs/error.log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("events")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("worker_connections")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8081")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keep-alive test'),a("span",{pre:!0,attrs:{class:"token escape entity"}},[t._v("\\n")]),t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keepalive_timeout")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5s")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("postman测试通信，ok有回复")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/iznilul/img/1645447350193.png",alt:""}})]),t._v(" "),a("p",[t._v("本地测试脚本：")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" requests\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" time\n\nsession "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" requests"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Session"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nurl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://cloudwork:8081/httptest"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#配置自己的ip地址，本地用127.0.0.1")]),t._v("\nres "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" session"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nres "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" session"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nres "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" session"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("用request.session 向服务器发送请求，第一次间隔2s，小于5s，不用三次握手，第二次间隔6s，超过了5s，所以重新三次握手建立连接，第三次间隔8s是为了让服务器主动释放连接，如果不设立第三次睡眠或者睡眠小于5s则是客户端先请求断开")]),t._v(" "),a("p",[t._v("tcpdump在linux上装好就行啦=v=")]),t._v(" "),a("h2",{attrs:{id:"_0x03-分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0x03-分析"}},[t._v("#")]),t._v(" 0x03 分析")]),t._v(" "),a("h3",{attrs:{id:"启动环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动环境"}},[t._v("#")]),t._v(" 启动环境")]),t._v(" "),a("p",[t._v("linux 运行命令,启动tcpdump -i 后面是监听网卡 port 监听端口 -w 转存文件，一会到wireshark下分析（转存的文件会直接保存到当前目录下）")]),t._v(" "),a("p",[a("code",[t._v("tcpdump -i ens5 port 8081 -w httptest.pcap")])]),t._v(" "),a("p",[t._v("然后运行python脚本")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/iznilul/img/1645447353163.png",alt:""}})]),t._v(" "),a("p",[t._v("等到python运行完毕，ctrl+c退出tcpdump")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/iznilul/img/1645447352679.png",alt:""}})]),t._v(" "),a("p",[t._v("在linux可以看到当前有了转存文件，把它移动到本地目录下用wireshark进行分析")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/iznilul/img/1645447355741.png",alt:""}})]),t._v(" "),a("p",[t._v("根据python进行逐步分析过程")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/iznilul/img/1645447356386.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"第一次请求返回"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一次请求返回"}},[t._v("#")]),t._v(" 第一次请求返回")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/iznilul/img/1645447358993.png",alt:""}})]),t._v(" "),a("p",[t._v("序号1-7的整个过程是第一次请求返回的过程，时间一共花了半秒左右")]),t._v(" "),a("p",[t._v("1-3三次握手，4-5发送请求，6-7服务器返回")]),t._v(" "),a("p",[t._v("能从序号七的data里看到设定的返回值")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/iznilul/img/1645447360715.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"第二次请求返回"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二次请求返回"}},[t._v("#")]),t._v(" 第二次请求返回")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/iznilul/img/1645447361314.png",alt:""}})]),t._v(" "),a("p",[t._v("序号8-15是第二次返回的过程，由于第一次返回到第二次请求之间只隔了2s，所以这次请求时http还在keep-alive中，长连接仍然在保持，不需要三次握手")]),t._v(" "),a("p",[t._v("不过由于下一次请求之间隔了6s，所以在序号12的时候，也就是第七秒到了keep-alive的最大保持时间5s，挥手断开连接")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/iznilul/img/1645447363888.png",alt:""}})]),t._v(" "),a("p",[t._v("注意，是服务器主动向客户端断开连接")]),t._v(" "),a("h3",{attrs:{id:"第三次请求返回"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三次请求返回"}},[t._v("#")]),t._v(" 第三次请求返回")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/iznilul/img/1645447365462.png",alt:""}})]),t._v(" "),a("p",[t._v("序号16-26，因为长连接已经断开，所以需要重新进行三次握手，完成这个请求返回之后由于客户端又休眠了8s，所以四次挥手再次断开，有了前面的经验这次就比较好分析了")]),t._v(" "),a("h2",{attrs:{id:"_0x04参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0x04参考文章"}},[t._v("#")]),t._v(" 0x04参考文章")]),t._v(" "),a("p",[t._v("借这个机会学习一下http keep-alive还有抓包工具，和大家分享，最近会继续看一下TCP的长连接与HTTP长连接的不同")]),t._v(" "),a("p",[t._v("https://zhuanlan.zhihu.com/p/224595048")]),t._v(" "),a("p",[t._v("https://zhuanlan.zhihu.com/p/84700638")])])}),[],!1,null,null,null);s.default=e.exports}}]);